/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/discret_window_screen/Discret_WindowViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Discret_WindowViewBase::Discret_WindowViewBase() :
    buttonCallback(this, &Discret_WindowViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    slideMenu1.setState(touchgfx::SlideMenu::EXPANDED);
    slideMenu1.setVisiblePixelsWhenCollapsed(0);
    slideMenu1.setHiddenPixelsWhenExpanded(0);
    slideMenu1.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenu1.setAnimationDuration(18);
    slideMenu1.setExpandedStateTimeout(180);
    slideMenu1.setXY(0, 0);

    background.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
    background.setPosition(0, 0, 480, 272);
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    b_toNextScreen.setXY(411, 196);
    b_toNextScreen.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    b_toNextScreen.setIconXY(22, 15);
    b_toNextScreen.setAction(buttonCallback);

    b_toPrevScreen.setXY(351, 196);
    b_toPrevScreen.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    b_toPrevScreen.setIconXY(22, 15);
    b_toPrevScreen.setAction(buttonCallback);

    digitalClock.setPosition(8, 11, 55, 25);
    digitalClock.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    digitalClock.setTypedText(touchgfx::TypedText(T_SINGLEUSEID25));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(10, 10, 0);

    lb_value_1.setXY(8, 45);
    lb_value_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lb_value_1.setLinespacing(0);
    lb_value_1.setWildcard(touchgfx::TypedText(T_SINGLEUSEID52).getText());
    lb_value_1.resizeToCurrentText();
    lb_value_1.setTypedText(touchgfx::TypedText(T_TEXTID3));

    t_value_1.setPosition(112, 44, 128, 28);
    t_value_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    t_value_1.setLinespacing(0);
    Unicode::snprintf(t_value_1Buffer, T_VALUE_1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID36).getText());
    t_value_1.setWildcard(t_value_1Buffer);
    t_value_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID35));

    lb_value_2.setXY(8, 73);
    lb_value_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lb_value_2.setLinespacing(0);
    lb_value_2.setWildcard(touchgfx::TypedText(T_SINGLEUSEID37).getText());
    lb_value_2.resizeToCurrentText();
    lb_value_2.setTypedText(touchgfx::TypedText(T_TEXTID3));

    lb_value_3.setXY(8, 101);
    lb_value_3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lb_value_3.setLinespacing(0);
    lb_value_3.setWildcard(touchgfx::TypedText(T_SINGLEUSEID40).getText());
    lb_value_3.resizeToCurrentText();
    lb_value_3.setTypedText(touchgfx::TypedText(T_TEXTID3));

    lb_value_4.setXY(8, 128);
    lb_value_4.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lb_value_4.setLinespacing(0);
    lb_value_4.setWildcard(touchgfx::TypedText(T_SINGLEUSEID43).getText());
    lb_value_4.resizeToCurrentText();
    lb_value_4.setTypedText(touchgfx::TypedText(T_TEXTID3));

    lb_value_5.setXY(8, 157);
    lb_value_5.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lb_value_5.setLinespacing(0);
    lb_value_5.setWildcard(touchgfx::TypedText(T_SINGLEUSEID46).getText());
    lb_value_5.resizeToCurrentText();
    lb_value_5.setTypedText(touchgfx::TypedText(T_TEXTID3));

    lb_value_6.setXY(8, 185);
    lb_value_6.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lb_value_6.setLinespacing(0);
    lb_value_6.setWildcard(touchgfx::TypedText(T_SINGLEUSEID49).getText());
    lb_value_6.resizeToCurrentText();
    lb_value_6.setTypedText(touchgfx::TypedText(T_TEXTID3));

    t_value_2.setPosition(112, 72, 128, 28);
    t_value_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    t_value_2.setLinespacing(0);
    Unicode::snprintf(t_value_2Buffer, T_VALUE_2_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID54).getText());
    t_value_2.setWildcard(t_value_2Buffer);
    t_value_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID53));

    t_value_3.setPosition(112, 100, 128, 28);
    t_value_3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    t_value_3.setLinespacing(0);
    Unicode::snprintf(t_value_3Buffer, T_VALUE_3_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID56).getText());
    t_value_3.setWildcard(t_value_3Buffer);
    t_value_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID55));

    t_value_4.setPosition(112, 128, 128, 28);
    t_value_4.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    t_value_4.setLinespacing(0);
    Unicode::snprintf(t_value_4Buffer, T_VALUE_4_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID58).getText());
    t_value_4.setWildcard(t_value_4Buffer);
    t_value_4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID57));

    t_value_5.setPosition(112, 156, 128, 28);
    t_value_5.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    t_value_5.setLinespacing(0);
    Unicode::snprintf(t_value_5Buffer, T_VALUE_5_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID60).getText());
    t_value_5.setWildcard(t_value_5Buffer);
    t_value_5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID59));

    t_value_6.setPosition(112, 184, 128, 28);
    t_value_6.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    t_value_6.setLinespacing(0);
    Unicode::snprintf(t_value_6Buffer, T_VALUE_6_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID62).getText());
    t_value_6.setWildcard(t_value_6Buffer);
    t_value_6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID61));

    add(__background);
    add(slideMenu1);
    add(background);
    add(b_toNextScreen);
    add(b_toPrevScreen);
    add(digitalClock);
    add(lb_value_1);
    add(t_value_1);
    add(lb_value_2);
    add(lb_value_3);
    add(lb_value_4);
    add(lb_value_5);
    add(lb_value_6);
    add(t_value_2);
    add(t_value_3);
    add(t_value_4);
    add(t_value_5);
    add(t_value_6);
}

void Discret_WindowViewBase::setupScreen()
{

}

void Discret_WindowViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &b_toNextScreen)
    {
        //toNextScreen
        //When b_toNextScreen clicked change screen to Discret_Window
        //Go to Discret_Window with no screen transition
        application().gotoDiscret_WindowScreenNoTransition();
    }
    else if (&src == &b_toPrevScreen)
    {
        //toPrevScreen
        //When b_toPrevScreen clicked change screen to Graphics_Window
        //Go to Graphics_Window with no screen transition
        application().gotoGraphics_WindowScreenNoTransition();
    }
}
