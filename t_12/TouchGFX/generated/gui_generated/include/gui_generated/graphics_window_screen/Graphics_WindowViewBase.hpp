/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GRAPHICS_WINDOWVIEWBASE_HPP
#define GRAPHICS_WINDOWVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/graphics_window_screen/Graphics_WindowPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Graphics_WindowViewBase : public touchgfx::View<Graphics_WindowPresenter>
{
public:
    Graphics_WindowViewBase();
    virtual ~Graphics_WindowViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void chooseRB_1()
    {
        // Override and implement this function in Graphics_Window
    }

    virtual void chooseRB_2()
    {
        // Override and implement this function in Graphics_Window
    }

    virtual void chooseRB_3()
    {
        // Override and implement this function in Graphics_Window
    }

    virtual void chooseRB_4()
    {
        // Override and implement this function in Graphics_Window
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background;
    touchgfx::TextAreaWithOneWildcard loggerSPI_1;
    touchgfx::GraphWrapAndClear<250> dynamicGraph1;
    touchgfx::GraphElementLine dynamicGraph1Line1;
    touchgfx::PainterRGB565 dynamicGraph1Line1Painter;
    touchgfx::GraphElementGridX dynamicGraph1MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph1MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph1MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph1MajorYAxisLabel;
    touchgfx::ButtonWithIcon b_toNextScreen;
    touchgfx::ButtonWithIcon b_toPrevScreen;
    touchgfx::ToggleButton tb_1;
    touchgfx::ToggleButton tb_2;
    touchgfx::ToggleButton tb_3;
    touchgfx::ToggleButton tb_4;
    touchgfx::GraphWrapAndClear<250> dynamicGraph2;
    touchgfx::GraphElementLine dynamicGraph2Line1;
    touchgfx::PainterRGB565 dynamicGraph2Line1Painter;
    touchgfx::GraphElementGridX dynamicGraph2MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph2MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph2MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph2MajorYAxisLabel;
    touchgfx::GraphWrapAndClear<250> dynamicGraph3;
    touchgfx::GraphElementLine dynamicGraph3Line1;
    touchgfx::PainterRGB565 dynamicGraph3Line1Painter;
    touchgfx::GraphElementGridX dynamicGraph3MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph3MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph3MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph3MajorYAxisLabel;
    touchgfx::GraphWrapAndClear<250> dynamicGraph4;
    touchgfx::GraphElementLine dynamicGraph4Line1;
    touchgfx::PainterRGB565 dynamicGraph4Line1Painter;
    touchgfx::GraphElementGridX dynamicGraph4MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph4MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph4MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph4MajorYAxisLabel;
    touchgfx::TextAreaWithOneWildcard t_Temp_1;
    touchgfx::TextAreaWithOneWildcard t_Temp_2;
    touchgfx::TextAreaWithOneWildcard t_Temp_3;
    touchgfx::TextAreaWithOneWildcard t_Temp_4;
    touchgfx::TextArea t_StaticValues;
    touchgfx::TextAreaWithOneWildcard loggerSPI_2;
    touchgfx::TextAreaWithOneWildcard loggerSPI_3;
    touchgfx::TextAreaWithOneWildcard loggerSPI_4;
    touchgfx::TextAreaWithOneWildcard t_NameScreen;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LOGGERSPI_1_SIZE = 300;
    touchgfx::Unicode::UnicodeChar loggerSPI_1Buffer[LOGGERSPI_1_SIZE];
    static const uint16_t LOGGERSPI_2_SIZE = 300;
    touchgfx::Unicode::UnicodeChar loggerSPI_2Buffer[LOGGERSPI_2_SIZE];
    static const uint16_t LOGGERSPI_3_SIZE = 300;
    touchgfx::Unicode::UnicodeChar loggerSPI_3Buffer[LOGGERSPI_3_SIZE];
    static const uint16_t LOGGERSPI_4_SIZE = 300;
    touchgfx::Unicode::UnicodeChar loggerSPI_4Buffer[LOGGERSPI_4_SIZE];
    static const uint16_t T_NAMESCREEN_SIZE = 30;
    touchgfx::Unicode::UnicodeChar t_NameScreenBuffer[T_NAMESCREEN_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Graphics_WindowViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // GRAPHICS_WINDOWVIEWBASE_HPP
