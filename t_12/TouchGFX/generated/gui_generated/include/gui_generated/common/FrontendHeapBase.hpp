/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/login__screen/Login_View.hpp>
#include <gui/login__screen/Login_Presenter.hpp>
#include <gui/discret__screen/Discret_View.hpp>
#include <gui/discret__screen/Discret_Presenter.hpp>
#include <gui/graphic_1__screen/Graphic_1_View.hpp>
#include <gui/graphic_1__screen/Graphic_1_Presenter.hpp>
#include <gui/graphic_2__screen/Graphic_2_View.hpp>
#include <gui/graphic_2__screen/Graphic_2_Presenter.hpp>
#include <gui/graphic_3__screen/Graphic_3_View.hpp>
#include <gui/graphic_3__screen/Graphic_3_Presenter.hpp>
#include <gui/graphic_4__screen/Graphic_4_View.hpp>
#include <gui/graphic_4__screen/Graphic_4_Presenter.hpp>
#include <gui/control__screen/Control_View.hpp>
#include <gui/control__screen/Control_Presenter.hpp>
#include <gui/analytics__screen/Analytics_View.hpp>
#include <gui/analytics__screen/Analytics_Presenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< Login_View,
            touchgfx::meta::TypeList< Discret_View,
            touchgfx::meta::TypeList< Graphic_1_View,
            touchgfx::meta::TypeList< Graphic_2_View,
            touchgfx::meta::TypeList< Graphic_3_View,
            touchgfx::meta::TypeList< Graphic_4_View,
            touchgfx::meta::TypeList< Control_View,
            touchgfx::meta::TypeList< Analytics_View,
            touchgfx::meta::Nil > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< Login_Presenter,
            touchgfx::meta::TypeList< Discret_Presenter,
            touchgfx::meta::TypeList< Graphic_1_Presenter,
            touchgfx::meta::TypeList< Graphic_2_Presenter,
            touchgfx::meta::TypeList< Graphic_3_Presenter,
            touchgfx::meta::TypeList< Graphic_4_Presenter,
            touchgfx::meta::TypeList< Control_Presenter,
            touchgfx::meta::TypeList< Analytics_Presenter,
            touchgfx::meta::Nil > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoLogin_ScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
